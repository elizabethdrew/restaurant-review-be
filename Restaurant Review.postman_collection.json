{
	"info": {
		"_postman_id": "7f0767c0-b1f6-4a77-9e63-a05be5ef54cc",
		"name": "Restaurant Review",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26377513"
	},
	"item": [
		{
			"name": "Get All Restaurants",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Restaurants - Paginate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurants?sort=city,asc",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants"
					],
					"query": [
						{
							"key": "sort",
							"value": "city,asc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Cuisines",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cuisines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cuisines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Restaurants by City",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurants?city=London",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants"
					],
					"query": [
						{
							"key": "city",
							"value": "London"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Restaurants by Rating",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurants?rating=4",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants"
					],
					"query": [
						{
							"key": "rating",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Restaurants by User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurants?user_id=1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants"
					],
					"query": [
						{
							"key": "user_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Reviews",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Reviews - Paginate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/reviews?page=0&size=5",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Reviews by Restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/reviews?restaurant_id=1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews"
					],
					"query": [
						{
							"key": "restaurant_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Reviews by User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/reviews?user_id=1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews"
					],
					"query": [
						{
							"key": "user_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Reviews by Rating",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const restaurant = response[0];",
							"console.log(restaurant.id)",
							"",
							"pm.test(\"Restaurant Found\", () => {",
							"    pm.expect(restaurant).to.be.an('object');",
							"});",
							"",
							"// If a restaurant found, add id to global variable",
							"if (restaurant) {",
							"    pm.globals.set(\"restaurantId\", restaurant.id);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/reviews?rating=1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews"
					],
					"query": [
						{
							"key": "rating",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Restaurant By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurants/:restaurantId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants",
						":restaurantId"
					],
					"variable": [
						{
							"key": "restaurantId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Review By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/reviews/:reviewtId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews",
						":reviewtId"
					],
					"variable": [
						{
							"key": "reviewtId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userid",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userid"
					],
					"variable": [
						{
							"key": "userid",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Restaurant By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Updated {{$randomStreetName}} Restaurant\", \n    \"city\": \"Bristol\",\n    \"cuisines\": [\"British\"],\n    \"latitude\": 51.4545,\n    \"longitude\": -2.5879,\n    \"price_range\": 1\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurants/:restaurantId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants",
						":restaurantId"
					],
					"variable": [
						{
							"key": "restaurantId",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Review By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"rating\": {{randomNumber}},\n    \"comment\": \"Urghh! Gross!\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/reviews/:reviewtId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews",
						":reviewtId"
					],
					"variable": [
						{
							"key": "reviewtId",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit User By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"pew name\", \n    \"email\": \"admin@email.com\",\n    \"username\": \"admin\",\n    \"password\": null,\n    \"role\": \"ADMIN\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userid",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userid"
					],
					"variable": [
						{
							"key": "userid",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Restaurant By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurants/:restaurantId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants",
						":restaurantId"
					],
					"variable": [
						{
							"key": "restaurantId",
							"value": "{{restaurant_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Cuisine",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cuisines/:cuisinename",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cuisines",
						":cuisinename"
					],
					"variable": [
						{
							"key": "cuisinename",
							"value": "Dog Food"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Review By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/reviews/:reviewtId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews",
						":reviewtId"
					],
					"variable": [
						{
							"key": "reviewtId",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/:userid",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userid"
					],
					"variable": [
						{
							"key": "userid",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.environment.set(\"restaurant_id\", responseJson.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomStreetName}} Restaurant\", \n    \"city\": \"{{$randomCity}}\",\n    \"price_range\": 2,\n    \"latitude\": 51.5074,\n    \"longitude\": 0.1278,\n    \"userId\": 1,\n    \"rating\": 4,\n    \"cuisines\": [\"British\", \"American\"]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Cuisine",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"pm.environment.set(\"restaurant_id\", responseJson.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Cat Food\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cuisines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cuisines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Review",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"var review = responseJson.Review;",
							"pm.environment.set(\"review_id\", review.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"restaurant_id\": \"16\", \n    \"rating\": \"{{randomNumber}}\",\n    \"comment\": \"Great Food.\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"badmin\", \n    \"email\": \"badmin@email.com\",\n    \"username\": \"badmin\",\n    \"password\": \"password\",\n    \"role\": \"ADMIN\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"token\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.globals.set('randomNumber', Math.floor(Math.random() * 5));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api/v1"
		},
		{
			"key": "token",
			"value": "null"
		},
		{
			"key": "restaurant_id",
			"value": "",
			"type": "string"
		}
	]
}