openapi: 3.0.3
info:
  title: Restaurant Review API
  version: 1.0.0
  description: An API for managing restaurant reviews
paths:
  /restaurants:
    get:
      summary: Get all restaurants
      operationId: getAllRestaurants
      tags:
        - Restaurants
      description: Returns a list of all restaurants.
      responses:
        '200':
          description: A list of restaurants.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
        '500':
              description: Internal server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
    post:
      summary: Add a new restaurant
      operationId: addNewRestaurant
      tags:
        - Restaurants
        - Add New
      description: Adds a new restaurant to the database.
      requestBody:
        description: The restaurant to add.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantInput'
      responses:
        '201':
          description: The new restaurant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    idParam:
      name: id
      in: path
      description: The ID of the resource to retrieve or update.
      required: true
      schema:
        type: integer
        format: int64

    nameParam:
      name: name
      in: query
      description: The name of the resource to search for.
      required: false
      schema:
        type: string

    cityParam:
      name: city
      in: query
      description: The city of the resource to search for.
      required: false
      schema:
        type: string

    ratingParam:
      name: rating
      in: query
      description: The rating of the resource to search for.
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 5

  schemas:
      
    Restaurant:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The unique identifier of the restaurant.
        name:
          type: string
          description: The name of the restaurant.
        city:
          type: string
          description: The city where the restaurant is located.
        rating:
          type: integer
          minimum: 1
          maximum: 5
          description: The rating of the restaurant.
        created_at:
          type: string
          format: date-time
          description: The date and time the restaurant was created.
      required:
        - name
        - city
        - rating

    RestaurantInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the restaurant.
        city:
          type: string
          description: The city where the restaurant is located.
        rating:
          type: integer
          minimum: 1
          maximum: 5
          description: The rating of the restaurant.
      required:
        - name
        - city
        - rating

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      
    RestaurantResponse:
      type: object
      properties:
        success:
         type: boolean
        restaurant:
          $ref: '#/components/schemas/Restaurant'
        error:
          $ref: '#/components/schemas/Error'